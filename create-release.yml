parameters:
- name: tag
  displayName: The Release Tag (e.g. "v2022.03.04")
  type: string
- name: packageVersion
  displayName: The software bill of materials (SBOM) package version (e.g. "2022.03.04")
  type: string
- name: isDraft
  displayName: Mark this a Draft Release?
  type: boolean
  default: true

trigger: none

steps:

- bash: |
    cd $(Build.SourcesDirectory)
    cp -r .git $(Build.ArtifactStagingDirectory)
    rm -rf .git
  displayName: 'Temporarily move .git so it is not a part of the SBOM'
- task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
  displayName: 'Generate SBOM'
  inputs:
    BuildComponentPath: '$(Build.SourcesDirectory)'
    BuildDropPath: '$(Build.SourcesDirectory)'
    PackageName: 'sbom-package-name'
    PackageVersion: ${{ parameters.packageVersion }} 
    Verbosity: Verbose

- bash: |
    cd $(Build.SourcesDirectory)
    cat _manifest/manifest.json | jq . > temp.json \
      && mv temp.json _manifest/manifest.json \
      && rm -f temp.json
    cat _manifest/spdx_2.2/manifest.spdx.json | jq . > temp.json \
      && mv temp.json _manifest/spdx_2.2/manifest.spdx.json \
      && rm -f temp.json
  displayName: 'Pretty Print SBOM'

- bash: |
    cd $(Build.ArtifactStagingDirectory)
    cp -r .git $(Build.SourcesDirectory)
    rm -rf .git
  displayName: 'Restore .git'

- task: PublishBuildArtifacts@1
  displayName: 'Publish SBOM as Build Artifact'
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/_manifest'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# GitHub Release
# Create, edit, or delete a GitHub release
# https://github.com/Microsoft/azure-pipelines-tasks/tree/master/Tasks/GitHubReleaseV0
- task: GitHubRelease@0
  inputs:
    gitHubConnection: glennmusa
    repositoryName: '$(Build.Repository.Name)' 
    action: 'create' # Options: create, edit, delete
    target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
    tagSource: 'manual' # Required when action == Create# Options: auto, manual
    #tagPattern: # Optional
    tag: ${{ parameters.tag }}
    title: 'MLZ - ${{ parameters.tag }}'
    #releaseNotesSource: 'file' # Optional. Options: file, inline
    #releaseNotesInline: Use this option to manually enter release notes. Use with releaseNotesSource = inline
    #releaseNotesFilePath: # Optional. Use the contents of a file as release notes. 
    #releaseNotes: # Optional
    #assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
    #assetUploadMode: 'delete' # Optional. Options: delete, replace
    isDraft: ${{ parameters.isDraft }} # Optional
    #isPreRelease: false # Optional
    addChangeLog: true # Optional
    compareWith: 'lastFullRelease' # Required when addChangeLog == True. Options: lastFullRelease, lastRelease, lastReleaseByTag
    #releaseTag: # Required when compareWith == LastReleaseByTag